name: CI
on:
  push:
#   branches: [ master ]
  pull_request:
#   branches: [ master ]

jobs:
  matrix-build:
    runs-on: ${{ matrix.os-version }}

    strategy:
      fail-fast: false
      matrix:
        os-version: [ ubuntu-latest ]
        build_type: [ Release ]
        compiler: [ gcc-9, gcc-10, gcc-11, clang-9, clang-10, clang-11 ]
        cmake-version: [ "3.16", "" ]
        root-version:
        - {
            name: 6.22.08,
            cmake_args: "-DCMAKE_CXX_FLAGS='--std=c++17' -DCMAKE_CXX_STANDARD=17"
          }
        - {
            name: 6.24.00,
          }
        - {
            name: 6.24.06,
          }

    steps:
      - name: Setup gcc compiler
        id: setup_cc
        uses: rlalik/setup-cpp-compiler@v1.1
        with:
          compiler: ${{ matrix.compiler }}

      - name: Install common dependencies
        run: |
          sudo apt update
          sudo apt install ${{ matrix.compiler.package }} -y
          sudo apt install cmake libgtest-dev lcov rapidjson-dev libcurl4-openssl-dev -y
          sudo apt install python3-numpy libtbb-dev libxxhash0 -y
          cmake --version
          wget http://gccb.if.uj.edu.pl/code/root-cpp17_${{ matrix.root-version.name }}_amd64.deb
          sudo dpkg -i root-cpp17_${{ matrix.root-version.name }}_amd64.deb

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.9
        with:
          cmake-version: ${{ matrix.cmake-version }}

      - name: Checkout tools repo
        uses: actions/checkout@v2
        with:
          repository: SiFi-CC/CmdLineArgs
          submodules: recursive

      - name: Install CmdLineArgs
        shell: bash
        env:
          CC: ${{ steps.setup_cc.outputs.cc }}
          CXX: ${{ steps.setup_cc.outputs.cxx }}
        run: |
          . /etc/profile
          CXX=${{ matrix.compiler.cxx }} cmake \
            -S . \
            -B build
          cmake --build build --config ${{ matrix.build_type }}
          sudo cmake --build build --target install

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Configure
        shell: bash
        env:
          CC: ${{ steps.setup_cc.outputs.cc }}
          CXX: ${{ steps.setup_cc.outputs.cxx }}
        run: |
          . /etc/profile
          pwd
          ls -all
          CXX=${{ matrix.compiler.cxx }} cmake \
            -S . \
            -B build \
            -DENABLE_TESTING=On \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_INSTALL_PREFIX:PATH=instdir \
            ${{ matrix.root-version.cmake_args }}

      - name: Build
        shell: bash
        run: cmake --build build --config ${{ matrix.build_type }}

      - name: Test
        shell: bash
        run: cmake --build build --target test
